import sub            // for reg5 = reg5 – 1

// popcount: count 1-bits in reg1 → reg2
loadi   reg1  120     // example input
loadi   reg2    0     // accumulator
loadi   reg4    1     // constant 1
loadi   reg5   16     // loop count (bit-width)

popLoop:
    jump   reg5 endLoop   // if reg5==0 → done
    and    reg3 reg1 reg4 // extract LSB
    add    reg2 reg2 reg3 // accumulate
    rotate reg1 reg1 1    // rotate right
    sub    reg5 reg5 reg4 // reg5--
    jump   reg0 popLoop   // unconditional back

endLoop:
out    reg2           // print result
halt